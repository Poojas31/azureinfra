before_script:
    - export PATH=$PATH:/opt/maven/apache-maven-3.5.3/bin
        
stages:
    - build
    #- connect
    - test
    - code-quality
    - package
    - deploy
    - loadtesting
    
variables:
 MYSQL_DATABASE_NAME: "neweshop"
 MYSQL_DATABASE_SCHEMA: "$CI_PROJECT_DIR/src/main/sql/neweshop.sql"
 MYSQL_ROOT_PASSWORD: "root"

build:
 stage: build
 script:
  - mvn clean compile
 artifacts:
    name: "${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}"
    paths:
      - build/libs/*.war
      - build/docs/javadoc/*
  
#connect:
 #stage: connect
 #image: mysql
 #before_script:
  #- mysql --version
 #script:
  #- mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=10.34.156.27 -e "show databases; use $MYSQL_DATABASE_NAME; show tables;"
  
test:
 stage: test
 image: maven:latest
 script:
  - mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install
  - mvn $MAVEN_CLI_OPTS test jacoco:report sonar:sonar -Dsonar.branch=sonarBranch
 artifacts:
    name: "${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}_testreports"
    paths:
      - target/site/jacoco/*

package:
 stage: package
 script:
  - mvn package deploy verify
 artifacts:
    name: "${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}"
    paths:
      - $CI_PROJECT_DIR/target/
     
#deploy:
# stage: deploy
# image: williamyeh/ansible:centos7
# only:
#  - master
# tags:
#  - ansible
# before_script:
#  - ansible-playbook --version
# script:
#  - cp $CI_PROJECT_DIR/target/eStore.war /var/lib/tomcat/webapps
# - ansible-playbook /etc/ansible/tomcat.yml
#  - /bin/systemctl restart tomcat


deploy:
 stage: deploy
 script:
   - cp $CI_PROJECT_DIR/target/eStore.war /opt/eStoreWar/
   - ansible-playbook -i hosts $CI_PROJECT_DIR/deploy.yml
   #- cp ./build/libs/eStore.war /var/lib/tomcat/webapps/eStore.war
 environment:
   name: deploy server1
   url: http://104.211.228.107:8080/eStore/
  
loadtesting:
  stage: loadtesting
  #tags:
    #- docker
  script:
    #- docker exec -i jmeter-client sh -c 'cat > sample-test/estore.jmx' < $CI_PROJECT_DIR/jmeter/estore.jmx
    #- docker exec -i jmeter-client bin/bash -c " jmeter -n -t /sample-test/estore.jmx "
    #- /opt/apache-jmeter-4.0/bin/jmeter -Juser.classpath=/opt/JMeter-InfluxBD-Writer/JMeter-InfluxDB-Writer-plugin-1.2.jar -n -t $CI_PROJECT_DIR/jmeter/estore.jmx
    - /opt/apache-jmeter-3.3/bin/jmeter -n -t $CI_PROJECT_DIR/jmeter/estore.jmx
    #- exit
  #when: manual